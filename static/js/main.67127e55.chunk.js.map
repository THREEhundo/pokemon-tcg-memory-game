{"version":3,"sources":["components/Header.js","components/TCGBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","headerImg","bannerLink","banner","src","id","alt","TCGBoard","firstGroup","secondGroup","thirdGroup","fourthGroup","fifthGroup","sixthGroup","seventhGroup","eighthGroup","ninthGroup","tenthGroup","switchPokeView","currentScore","highScore","shuffle","switchDecks","current","map","x","App","useState","setHeaderImg","pokedex","setPokedex","setFirstGroup","setSecondGroup","setThirdGroup","setFourthGroup","setFifthGroup","setSixthGroup","setSeventhGroup","setEightGroup","setNinthGroup","setTenthGroup","selected","setSelected","useRef","data","sort","Math","random","splitData","array","groups","i","length","splice","useEffect","grabHeader","symbol","images","a","fetch","json","console","log","fetchData","parseData","res","reduce","itm","find","item","JSON","stringify","name","concat","pokemon","img","small","fetched","parsed","shuffled","handleClick","useCallback","e","target","parentNode","includes","copiedPokedex","className","pokeSet","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67127e55.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  const { headerImg } = props;\n\n  const bannerLink = headerImg !== null ? headerImg : \"\";\n\n  const banner = <img src={bannerLink} id=\"banner\" alt=\"banner\"></img>;\n\n  return <div>{banner}</div>;\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst TCGBoard = (props) => {\n  const {\n    firstGroup,\n    secondGroup,\n    thirdGroup,\n    fourthGroup,\n    fifthGroup,\n    sixthGroup,\n    seventhGroup,\n    eighthGroup,\n    ninthGroup,\n    tenthGroup,\n    switchPokeView,\n    currentScore,\n    highScore,\n    shuffle,\n  } = props;\n\n  function newDeck() {\n    if (firstGroup !== null && currentScore.current <= 9) {\n      return switchPokeView(shuffle(firstGroup.map((x) => x)));\n    } else if (firstGroup !== null && currentScore.current <= 19) {\n      return switchPokeView(shuffle(secondGroup.map((x) => x)));\n    } else if (secondGroup !== null && currentScore.current <= 29) {\n      return switchPokeView(shuffle(thirdGroup.map((x) => x)));\n    } else if (thirdGroup !== null && currentScore.current <= 39) {\n      return switchPokeView(shuffle(fourthGroup.map((x) => x)));\n    } else if (fourthGroup !== null && currentScore.current <= 49) {\n      return switchPokeView(shuffle(fourthGroup.map((x) => x)));\n    } else if (fifthGroup !== null && currentScore.current <= 59) {\n      return switchPokeView(shuffle(fifthGroup.map((x) => x)));\n    } else if (sixthGroup !== null && currentScore.current <= 59) {\n      return switchPokeView(shuffle(sixthGroup.map((x) => x)));\n    } else if (seventhGroup !== null && currentScore.current <= 69) {\n      return switchPokeView(shuffle(seventhGroup.map((x) => x)));\n    } else if (eighthGroup !== null && currentScore.current <= 79) {\n      return switchPokeView(shuffle(eighthGroup.map((x) => x)));\n    } else if (ninthGroup !== null && currentScore.current <= 89) {\n      return switchPokeView(shuffle(ninthGroup.map((x) => x)));\n    } else if (tenthGroup !== null && currentScore.current <= 99) {\n      return switchPokeView(shuffle(tenthGroup.map((x) => x)));\n    } else if (currentScore.current === 100) {\n      return <div>You Win!</div>;\n    } else {\n      return <div>...Loading</div>;\n    }\n  }\n\n  const switchDecks = newDeck();\n\n  return (\n    <div>\n      <div id=\"scoreBoard\">\n        <div id=\"currentScore\">\n          <img\n            src=\"https://fontmeme.com/permalink/210302/85e7558e3bc0b2b9b081d06952401a81.png\"\n            id=\"currentImg\"\n            alt=\"currentScore\"\n          />\n          : {currentScore.current}\n        </div>\n        <div id=\"highScore\">\n          <img\n            src=\"https://fontmeme.com/permalink/210302/34a426d0ccc503a37ea413d14d8ddb10.png\"\n            id=\"highImg\"\n            alt=\"highScore\"\n          />\n          : {highScore.current}\n        </div>\n      </div>\n      <div id=\"info\">\n        <p>Get points by clicking on an image. Not more than once!</p>\n        <p>There are 10 rounds to beat!</p>\n      </div>\n      <ul>{switchDecks}</ul>\n    </div>\n  );\n};\n\nexport default TCGBoard;\n","import \"./App.css\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport TCGBoard from \"./components/TCGBoard\";\n\nconst App = (props) => {\n  const [headerImg, setHeaderImg] = useState(null);\n  const [pokedex, setPokedex] = useState(null);\n  const [firstGroup, setFirstGroup] = useState(null);\n  const [secondGroup, setSecondGroup] = useState(null);\n  const [thirdGroup, setThirdGroup] = useState(null);\n  const [fourthGroup, setFourthGroup] = useState(null);\n  const [fifthGroup, setFifthGroup] = useState(null);\n  const [sixthGroup, setSixthGroup] = useState(null);\n  const [seventhGroup, setSeventhGroup] = useState(null);\n  const [eighthGroup, setEightGroup] = useState(null);\n  const [ninthGroup, setNinthGroup] = useState(null);\n  const [tenthGroup, setTenthGroup] = useState(null);\n  const [selected, setSelected] = useState([]);\n  const currentScore = useRef(0);\n  const highScore = useRef(0);\n\n  useEffect(() => {\n    function grabHeader(data) {\n      const { symbol } = data.data[0].images;\n      setHeaderImg(symbol);\n    }\n\n    async function fetchData() {\n      try {\n        const url =\n          \"https://api.pokemontcg.io/v2/sets?q=id:base1&images.symbol\";\n\n        const data = await fetch(url);\n        const res = await data.json();\n        grabHeader(res);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  function shuffle(data) {\n    return data.sort(() => 0.5 - Math.random());\n  }\n\n  function splitData(array) {\n    let groups = [\n      setFirstGroup,\n      setSecondGroup,\n      setThirdGroup,\n      setFourthGroup,\n      setFifthGroup,\n      setSixthGroup,\n      setSeventhGroup,\n      setEightGroup,\n      setNinthGroup,\n      setTenthGroup,\n    ];\n\n    for (let i = 0; i < groups.length; i++) {\n      groups[i](array.splice(0, 10));\n    }\n    return groups;\n  }\n\n  useEffect(() => {\n    function parseData(res) {\n      const { data } = res;\n\n      let unique = data.reduce((res, itm) => {\n        let result = res.find(\n          (item) => JSON.stringify(item.name) === JSON.stringify(itm.name)\n        );\n        if (!result) return res.concat(itm);\n        return res;\n      }, []);\n      const allUnique = unique.splice(0, 100);\n\n      return allUnique.map((pokemon) => {\n        return {\n          id: pokemon.id,\n          name: pokemon.name,\n          img: pokemon.images.small,\n        };\n      });\n    }\n\n    async function fetchData() {\n      try {\n        const url =\n          \"https://api.pokemontcg.io/v2/cards?q=set.series:base&nationalPokedexNumbers:[1%20TO%20151]&pageSize=250\";\n\n        const fetched = await fetch(url);\n        const res = await fetched.json();\n        const parsed = parseData(res);\n        const shuffled = shuffle(parsed);\n        setPokedex(shuffled);\n        splitData(shuffled);\n      } catch (error) {\n        console.log(\"Error: \", error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleClick = useCallback(\n    (e) => {\n      const handleClick = (e) => {\n        const { parentNode } = e.target;\n        const { id } = parentNode;\n\n        if (selected.includes(id)) {\n          // reset score\n          currentScore.current = 0;\n          setSelected([]);\n\n          // refresh view\n          const copiedPokedex = shuffle(pokedex.map((x) => x));\n          setPokedex(copiedPokedex);\n          splitData(copiedPokedex);\n        } else {\n          // add to both counters\n          setSelected([...selected, id]);\n          currentScore.current = currentScore.current + 1;\n          if (highScore.current === currentScore.current - 1) {\n            highScore.current = highScore.current + 1;\n          }\n        }\n      };\n      handleClick(e);\n    },\n    [pokedex, selected]\n  );\n\n  const switchPokeView = (pokeSet) => {\n    return pokeSet.map((pokemon) => (\n      <li key={pokemon.id} id={pokemon.id} onClick={handleClick}>\n        <img src={pokemon.img} alt=\"card\"></img>\n      </li>\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <Header headerImg={headerImg} />\n      <TCGBoard\n        switchPokeView={switchPokeView}\n        firstGroup={firstGroup}\n        secondGroup={secondGroup}\n        thirdGroup={thirdGroup}\n        fourthGroup={fourthGroup}\n        fifthGroup={fifthGroup}\n        sixthGroup={sixthGroup}\n        seventhGroup={seventhGroup}\n        eighthGroup={eighthGroup}\n        ninthGroup={ninthGroup}\n        tenthGroup={tenthGroup}\n        onClick={handleClick}\n        currentScore={currentScore}\n        highScore={highScore}\n        shuffle={shuffle}\n        selected={selected}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}